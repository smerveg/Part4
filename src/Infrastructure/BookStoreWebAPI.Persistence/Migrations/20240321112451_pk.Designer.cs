// <auto-generated />
using System;
using BookStoreWebAPI.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStoreWebAPI.Persistence.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20240321112451_pk")]
    partial class pk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Purchase", b =>
                {
                    b.Property<int>("PurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PurchaseID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.PurchaseBook", b =>
                {
                    b.Property<int>("PurchaseBookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int?>("BookID1")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseID")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseID1")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PurchaseBookID");

                    b.HasIndex("BookID");

                    b.HasIndex("BookID1");

                    b.HasIndex("PurchaseID");

                    b.HasIndex("PurchaseID1");

                    b.ToTable("PurchaseBook");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Purchase", b =>
                {
                    b.HasOne("BookStoreWebAPI.Domain.Entities.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.PurchaseBook", b =>
                {
                    b.HasOne("BookStoreWebAPI.Domain.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreWebAPI.Domain.Entities.Book", null)
                        .WithMany("PurchaseBooks")
                        .HasForeignKey("BookID1");

                    b.HasOne("BookStoreWebAPI.Domain.Entities.Purchase", null)
                        .WithMany()
                        .HasForeignKey("PurchaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreWebAPI.Domain.Entities.Purchase", null)
                        .WithMany("PurchaseBooks")
                        .HasForeignKey("PurchaseID1");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Book", b =>
                {
                    b.Navigation("PurchaseBooks");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("BookStoreWebAPI.Domain.Entities.Purchase", b =>
                {
                    b.Navigation("PurchaseBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
